name: Build and Deploy on Push

on:
  push:
    branches:
      - master

env:
  AWS_ACCESS_KEY_ID: AKIAXAK5ZJPSK6JYSQV5
  AWS_DEFAULT_REGION: ap-northeast-1
  IMAGE_TAG: latest
  CDN_DISTRIBUTION_ID: E1WWDSKZ2AHJRC

jobs:
  build:

    runs-on: ubuntu-latest
  
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_DEFAULT_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Checkout
        uses: actions/checkout@v2

      - name: Build and push the Docker image to ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: wordpress
        run: |
          docker build -t "${ECR_REGISTRY}/${ECR_REPOSITORY}:${IMAGE_TAG}" .
          docker push "${ECR_REGISTRY}/${ECR_REPOSITORY}:${IMAGE_TAG}"

  deploy:
    needs: build

    runs-on: ubuntu-latest
    container: mesosphere/aws-cli
    env:
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    steps:
      - name: Update the ECS service
        run: |
          aws ecs update-service --cluster wordpress-cluster --service wordpress-svc --force-new-deployment

      - name: Invalidate the CloudFront cache
        run: |
          aws cloudfront create-invalidation --distribution-id "$CDN_DISTRIBUTION_ID" --paths '/*'
